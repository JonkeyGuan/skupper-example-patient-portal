title: Patient Portal with PostgreSQL and Skupper
subtitle: A simple database-backed web application that runs in the public cloud but keeps its data in a private database
github_actions_url: https://github.com/skupperproject/skupper-example-patient-portal/actions/workflows/main.yaml
overview: |
  XXX postgresql (for psql), podman
prerequisites: !string prerequisites
contexts:
  public:
    kubeconfig: ~/.kube/config-public
    namespace: public
steps:
  # - standard: configure_separate_console_sessions
  # - standard: access_your_clusters
  # - standard: set_up_your_namespaces
  # - standard: install_skupper_in_your_namespaces
  # - standard: check_the_status_of_your_namespaces
  # - title: Link your namespaces
  #   preamble: !string link_your_namespaces_preamble
  #   commands:
  #     west:
  #       - run: skupper token create ~/west.token
  #     east:
  #       - run: skupper link create ~/west.token
  #       - run: skupper link status --wait 30
  #   postamble: !string link_your_namespaces_postamble
  - title: Deploy the database
  - title: Expose the database
  - title: Deploy the frontend service
    preamble: |
      Use `kubectl create deployment` to deploy the frontend service
      in `public`.
    commands:
      public:
        - run: kubectl create deployment patient-portal-frontend --image quay.io/skupper/patient-portal-frontend
          await: [deployment/patient-portal-frontend]
  - title: Expose the frontend service
  - title: Test the application
cleaning_up:
  preamble: !string cleaning_up_preamble
  commands:
    public:
      - run: skupper delete
      - run: kubectl delete service/patient-portal-frontend
      - run: kubectl delete deployment/patient-portal-frontend
next_steps: !string next_steps
